<!DOCTYPE html>
<html id = "maphtml">
  <head>
    <title>Map</title>
    <meta charset="utf-8">
  </head>
  <body id = "mapbody">

    <div id="map"></div>

    <div id="rightpanel">

      <div class="infobox">
        <p><b>Search For: </b></p>
        <p>
          <select id="destinationType">
            <option selected disabled>Choose Destination Type</option>
            <option value="airport">Airports</option>
            <option value="amusement_park">Amusement Parks</option>
            <option value="aquarium">Aquariums</option>
            <option value="art_gallery">Art Galleries</option>
            <option value="bakery">Bakeries</option>
            <option value="bar">Bars</option>
            <option value="book_store">Book Stores</option>
            <option value="bowling_alley">Bowling Alleys</option>
            <option value="cafe">Cafes</option>
            <option value="campground">Campgrounds</option>
            <option value="casino">Casinos</option>
            <option value="clothing_store">Clothing Stores</option>
            <option value="movie_theater">Movie Theatres</option>
            <option value="museum">Museums</option>
            <option value="night_club">Night Clubs</option>
            <option value="park">Parks</option>
            <option value="restaurant">Restaurants</option>
            <option value="shopping_mall">Shopping Malls</option>
            <option value="spa">Spas</option>
            <option value="stadium">Stadiums</option>
            <option value="travel_agency">Travel Agencies</option>
            <option value="university">Universities</option>
            <option value="zoo">Zoos</option>
          </select>
        </p>
      </div>

      <div class="infobox">
        <p><b>Mode of Transportation</b></p>
        <p>
          <select id="travelMode">
            <option value="DRIVING">Driving</option>
            <option value="TRANSIT">Public Transit</option>
            <option value="WALKING">On Foot</option>
          </select>
        </p>

        <p><b>Start:</b></p>
        <p><span id="startPos">A </span><input type="text" id="start" value="SFU, BC"></p>
        <br>

        <div id="tripBox">

          <p><b>Your Trip: </b></p>
          <table id="trip">
          </table>
        </div>

        <br>
        <p><b>End:</b></p>
        <p><span id="endPos"></span><input type="text" id="end" value="SFU, BC"></p>
        <br>

        <button id="calcRouteButton">Calculate Route</button>
        <p id="errorBox"></p>
      </div>
    </div>

    <script>
      var map;
      var places = [];
      var infowindows =[];
      var markers = [];
      var waypts = [];
      var tripTable = document.getElementById("trip");
      var tableIndex = 0;
      var Alpha = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];

      //waypoints are disabled when public transit is selected - limitation of Google Maps API
      var hideWaypts = function() {
        if (document.getElementById('travelMode').value == "TRANSIT") {
          document.getElementById('tripBox').style.display = 'none';
        } else {
          document.getElementById('tripBox').style.display = 'initial';
        }
      }
      document.getElementById('travelMode').addEventListener('change', hideWaypts);



      function initMap() {
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;

        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 49.278947, lng: -122.916525},
          zoom: 11
        });
        directionsDisplay.setMap(map);

        var callCalcRoute = function() {
          calcRoute(directionsService, directionsDisplay);
        }

        document.getElementById('calcRouteButton').addEventListener("click", callCalcRoute);

        /*var makeRoute = function() {
          calculateAndDisplayRoute(directionsService, directionsDisplay);
        };*/

        //document.getElementById('submit').addEventListener("click", makeRoute);

        var service = new google.maps.places.PlacesService(map);
        var doSearch = function() {
          var dtype = document.getElementById('destinationType').value;
          search(service, dtype);
        };

        document.getElementById('destinationType').addEventListener('change', doSearch);

      }

      //Finds search results and passes them to callback function
      function search(service, dtype) {
        service.nearbySearch({
          location: {lat: 49.278947, lng: -122.916525},
          radius: 50000,
          type: [dtype]
        }, callback);
      }

      //called by the search funtion. Calls createMarker for each search result.
      function callback(results, status) {
        clearMarkers();
        if (status === google.maps.places.PlacesServiceStatus.OK) {
          for (var i = 0; i < results.length; i++) {
            places[i] = results[i];
            markers[i] = createMarker(i);
          }
        }
      }

      //creates a marker and an Infowindow that opens when the marker is clicked
      function createMarker(i) {
        var marker = new google.maps.Marker({
          map: map,
          position: places[i].geometry.location,
          animation: google.maps.Animation.DROP
        });

        /*
        //Will need to get this working for infowindows to have things like phone number or price
        places.getDetails({
          placeId: places[i].place_id
        },
        function(placeResults, status) {
          if (status == google.maps.places.PlacesServiceStatus.OK) {
            places[i] = placeResults;
          }
        });
        */

        infowindows[i] = new google.maps.InfoWindow();

        google.maps.event.addListener(marker, 'click', function() {
          var IWcontent = "<b>Location Name: </b>" + places[i].name + "<br>" +
                          "<p>Rating: " + places[i].rating + "</p>" +
                          "<button id='addDest' type='button' onclick='addDest("+i+")'>Add to Trip</button>";

          infowindows[i].setContent(IWcontent);

          clearIWs();
          infowindows[i].open(map, marker);
        });
        return marker;
      }

      function addDest(i) {
        //Doesn't allow more than 8 waypoints to be added - the limit imposed by Google Maps API
        if (tableIndex < 8) {
          //Doesn't allow the same destination to be added more than once
          for (var j = 0; j < tableIndex; j++) {
            if (tripTable.rows[j].cells[1].innerHTML == places[i].name) {
              window.alert(places[i].name + ' has already been added to the trip.');
              return;
            }
          }
          //add the destination location to the waypts list
          waypts.push({
            location: places[i].geometry.location,
            stopover: true
          });
          //add the destination name to the trip table
          var row = tripTable.insertRow(tableIndex++);
          var cell0 = row.insertCell(0);
          cell0.innerHTML = '';
          //cell0.style.padding = '5px';
          var cell1 = row.insertCell(1);
          cell1.innerHTML = places[i].name;
          cell1.style.padding = '5px';
          var cell2 = row.insertCell(2);
          cell2.innerHTML = '<input type="button" value="Delete" onclick="removeDest(this)">'
          cell2.style.padding = '5px';
        }else{
          window.alert('Maximum Number of Destinations added!');
        }
      }

      function removeDest(r) {
        var i = r.parentNode.parentNode.rowIndex;
        //remove the place from the waypts array
        waypts.splice(i, 1);
        //remove the place from the trip table
        tripTable.deleteRow(i);
        tableIndex--;
      }

      function clearMarkers() {
        for (var i = 0; i < markers.length; i++) {
            if (markers[i]) {
                markers[i].setMap(null);
            }
        }
        markers = [];
      }

      //closes any opened Infowindows. Called when route is being displayed.
      function clearIWs() {
        for (var i = 0; i < infowindows.length; i++) {
          infowindows[i].close();
        }
      }

      function calcRoute(directionsService, directionsDisplay) {
        clearMarkers();
        document.getElementById("destinationType").value = "";

        if (document.getElementById('travelMode').value == "TRANSIT") {
          directionsService.route({
            origin: document.getElementById("start").value,
            destination: document.getElementById("end").value,
            travelMode: google.maps.TravelMode[document.getElementById("travelMode").value]
          },
          function(response, status) {
            if (status === google.maps.DirectionsStatus.OK) {
              document.getElementById('errorBox').innerHTML = '';
              directionsDisplay.setDirections(response);
            } else {
              document.getElementById('errorBox').innerHTML = 'Error: ' + status;
            }
          })
        }else{
          directionsService.route({
            origin: document.getElementById("start").value,
            destination: document.getElementById("end").value,
            waypoints: waypts,
            optimizeWaypoints: true,
            travelMode: google.maps.TravelMode[document.getElementById("travelMode").value]
          },
          function(response, status) {
            if (status === google.maps.DirectionsStatus.OK) {
              document.getElementById('errorBox').innerHTML = '';
              orderTripTable(response);
              directionsDisplay.setDirections(response);
            } else {
              document.getElementById('errorBox').innerHTML = 'Error: ' + status;
            }
          })
        }
      }

      function orderTripTable(response) {
        for (var j = 0; j < tripTable.rows.length; j++) {
          var OrderCell = tripTable.rows[response.routes[0].waypoint_order[j]].cells[0];
          OrderCell.innerHTML = Alpha[j+1];
          OrderCell.style.fontWeight = 'bold';
        }
        document.getElementById('startPos').style.display = 'initial';
        document.getElementById('endPos').style.display = 'initial';
        document.getElementById('endPos').innerHTML = Alpha[response.geocoded_waypoints.length - 1] + ' ';
      }

      /*function calculateAndDisplayRoute(directionsService, directionsDisplay) {
        var wayptsAll = document.getElementsByName('waypoint');

        //Waypoints are disabled if user is using public transit
        //Adds selected waypoints to waypts
        if (document.getElementById('travelMode').value !== "TRANSIT") {
          for (var i = 0; i < wayptsAll.length; i++) {
            if (wayptsAll[i].checked) {
              waypts.push({
                location: wayptsAll[i].value,
                stopover: true
              });
            }
          }
        }


        directionsService.route({
          origin: document.getElementById("start").value,
          destination: document.getElementById("end").value,
          waypoints: waypts,
          optimizeWaypoints: true,
          travelMode: google.maps.TravelMode[document.getElementById("travelMode").value]
        },
        function(response, status) {
          if (status === google.maps.DirectionsStatus.OK) {
            document.getElementById('errorBox').innerHTML = '';
            directionsDisplay.setDirections(response);
          } else {
            document.getElementById('errorBox').innerHTML = 'Error: ' + status;
          }
        })
      }*/



    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDaU5DbGvX_-OOZwj-az4zT4iC6gp8MmQQ&libraries=places&callback=initMap"
    async defer></script>
  </body>
</html>
